{"version":3,"file":"static/js/111.2c18cdff.chunk.js","mappings":"sKA0HA,UAxHA,SAAoBA,GAAiC,IAA9BC,EAASD,EAATC,UAAWC,EAAcF,EAAdE,eACxBC,GAAUC,EAAAA,EAAAA,UACVC,GAAYD,EAAAA,EAAAA,UACZE,GAAUF,EAAAA,EAAAA,UACVG,GAAiBH,EAAAA,EAAAA,UA0FvB,OAnFAI,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,IAAIC,sBACjB,SAAAC,IAAaC,EAAAA,EAAAA,GAAAD,EAAA,GAAN,GACOE,iBACNC,OAAOC,QAAQC,aAAa,KAAM,KAAM,SACxCd,EAAe,QAEvB,GACA,CAAEe,UAAW,IAEXC,EAAiB,IAAIR,sBACvB,SAAAS,IAAaP,EAAAA,EAAAA,GAAAO,EAAA,GAAN,GACON,iBACNC,OAAOC,QAAQC,aAAa,KAAM,KAAM,WACxCd,EAAe,UAEvB,GACA,CAAEe,UAAW,MAEXG,EAAe,IAAIV,sBACrB,SAAAW,IAAaT,EAAAA,EAAAA,GAAAS,EAAA,GAAN,GACOR,iBACNC,OAAOC,QAAQC,aAAa,KAAM,KAAM,SACxCd,EAAe,QAEvB,GACA,CAAEe,UAAW,MAEXK,EAAsB,IAAIZ,sBAC5B,SAAAa,IAAaX,EAAAA,EAAAA,GAAAW,EAAA,GAAN,GACOV,iBACNC,OAAOC,QAAQC,aAAa,KAAM,KAAM,gBACxCd,EAAe,eAEvB,GACA,CAAEe,UAAW,MAMXO,EAAiBrB,EAAQsB,QACzBC,EAAmBrB,EAAUoB,QAC7BE,EAAiBrB,EAAQmB,QACzBG,EAAwBrB,EAAekB,QAqB7C,OAfID,GACAf,EAASoB,QAAQL,GAEjBE,GACAR,EAAeW,QAAQH,GAEvBC,GACAP,EAAaS,QAAQF,GAErBC,GACAN,EAAoBO,QAAQD,GAKzB,WACCJ,GACAf,EAASqB,UAAUN,GAEnBE,GACAR,EAAeY,UAAUJ,GAEzBC,GACAP,EAAaU,UAAUH,GAEvBC,GACAN,EAAoBQ,UAAUF,EAItC,CACJ,GAAG,CAAC1B,KAGA6B,EAAAA,EAAAA,MAAA,WAAS9B,UAAS,GAAA+B,OAAK/B,GAAagC,GAAG,OAAOC,IAAK/B,EAAQgC,SAAA,EACvDJ,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,iCAAgCkC,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,MAAInC,UAAU,iBAAgBkC,SAAC,UAC/BC,EAAAA,EAAAA,KAAA,KAAGnC,UAAU,kBAAiBkC,SAAC,omBAEnCJ,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,gCAAgCiC,IAAK7B,EAAU8B,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,MAAInC,UAAU,4BAA2BkC,SAAC,0BAC1CC,EAAAA,EAAAA,KAAA,KAAGnC,UAAU,kBAAiBkC,SAAC,qDAInCJ,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,gCAAgCiC,IAAK5B,EAAQ6B,SAAA,EACxDC,EAAAA,EAAAA,KAAA,MAAInC,UAAU,4BAA2BkC,SAAC,wBAC1CC,EAAAA,EAAAA,KAAA,KAAGnC,UAAU,kBAAiBkC,SAAC,oFAGnCJ,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,gCAAgCiC,IAAK3B,EAAe4B,SAAA,EAC/DC,EAAAA,EAAAA,KAAA,MAAInC,UAAU,4BAA2BkC,SAAC,gCAC1CC,EAAAA,EAAAA,KAAA,KAAGnC,UAAU,kBAAiBkC,SAAC,qFAK/C,C","sources":["components/States/Utah.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nfunction UtahContent({ className, setActiveState }) {\n    const utahRef = useRef();\n    const archesRef = useRef();\n    const zionRef = useRef();\n    const bryceCanyonRef = useRef();\n\n\n\n    // TODO: 1. Add more refs for other parks if any\n\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(\n            ([entry]) => {\n                if (entry.isIntersecting) {\n                    window.history.replaceState(null, null, \"#utah\");\n                    setActiveState(\"utah\")\n                }\n            },\n            { threshold: 0 }\n        );\n        const archesObserver = new IntersectionObserver(\n            ([entry]) => {\n                if (entry.isIntersecting) {\n                    window.history.replaceState(null, null, \"#arches\");\n                    setActiveState(\"arches\")\n                }\n            },\n            { threshold: 0.02 }\n        );\n        const zionObserver = new IntersectionObserver(\n            ([entry]) => {\n                if (entry.isIntersecting) {\n                    window.history.replaceState(null, null, \"#zion\");\n                    setActiveState(\"zion\")\n                }\n            },\n            { threshold: 0.02 }\n        );\n        const bryceCanyonObserver = new IntersectionObserver(\n            ([entry]) => {\n                if (entry.isIntersecting) {\n                    window.history.replaceState(null, null, \"#bryceCanyon\");\n                    setActiveState(\"bryceCanyon\")\n                }\n            },\n            { threshold: 0.02 }\n        );\n\n        // TODO: 2. Add observers for other parks if any\n\n\n        const currentUtahRef = utahRef.current;\n        const currentArchesRef = archesRef.current;\n        const currentZionRef = zionRef.current;\n        const currentBryceCanyonRef = bryceCanyonRef.current;\n\n\n        // TODO: 3. Add const variable above\n\n\n        if (currentUtahRef) {\n            observer.observe(currentUtahRef);\n        }\n        if (currentArchesRef) {\n            archesObserver.observe(currentArchesRef);\n        }\n        if (currentZionRef) {\n            zionObserver.observe(currentZionRef);\n        }\n        if (currentBryceCanyonRef) {\n            bryceCanyonObserver.observe(currentBryceCanyonRef);\n        }\n        // TODO: 4. Add if statement to observe ref for new parks if any\n\n\n        return () => {\n            if (currentUtahRef) {\n                observer.unobserve(currentUtahRef);\n            }\n            if (currentArchesRef) {\n                archesObserver.unobserve(currentArchesRef);\n            }\n            if (currentZionRef) {\n                zionObserver.unobserve(currentZionRef);\n            }\n            if (currentBryceCanyonRef) {\n                bryceCanyonObserver.unobserve(currentBryceCanyonRef);\n            }\n            // TODO: 5. Add if statement to unobserve refs for new parks if any\n\n        };\n    }, [setActiveState]);\n\n    return (\n        <section className={`${className}`} id=\"utah\" ref={utahRef}>\n            <div className='state-section bg-light p-3 m-3'>\n                <h3 className='intro-subtitle'>UTAH</h3>\n                <p className='intro-paragraph'>(Paragraph about the state: Recognize native lands, give my favorite history, talk about how it makes me feel. Talk about cities/towns, and places I've been to, or notable places. Try to keep it short.) ____________ Kombucha JOMO pinterest gorpcore ramps ennui, wolf cardigan pitchfork raw denim bodega boys distillery. Meh glossier shabby chic poke semiotics, sriracha single-origin coffee stumptown. Forage DIY brunch etsy. Lomo venmo squid swag lo-fi vaporware paleo chia everyday carry letterpress. Hell of polaroid meh kale chips jawn, leggings blog shabby chic skateboard offal poutine church-key.</p>\n            </div>\n            <div className='park-section bg-light p-3 m-3' ref={archesRef}>\n                <h4 className='intro-subtitle park-title'>Arches National Park</h4>\n                <p className='intro-paragraph'>Some content I want to share about the park.</p>\n                {/* Grid and photos go here */}\n\n            </div>\n            <div className='park-section bg-light p-3 m-3' ref={zionRef}>\n                <h4 className='intro-subtitle park-title'>Zion National Park</h4>\n                <p className='intro-paragraph'>Some content I want to share about the park and about my hiking experience.</p>\n                {/* Grid and photos go here */}\n            </div>\n            <div className='park-section bg-light p-3 m-3' ref={bryceCanyonRef}>\n                <h4 className='intro-subtitle park-title'>Bryce Canyon National Park</h4>\n                <p className='intro-paragraph'>Some content I want to share about the park and about my hiking experience.</p>\n                {/* Grid and photos go here */}\n            </div>\n        </section>\n    );\n}\n\nexport default UtahContent;\n"],"names":["_ref","className","setActiveState","utahRef","useRef","archesRef","zionRef","bryceCanyonRef","useEffect","observer","IntersectionObserver","_ref2","_slicedToArray","isIntersecting","window","history","replaceState","threshold","archesObserver","_ref4","zionObserver","_ref6","bryceCanyonObserver","_ref8","currentUtahRef","current","currentArchesRef","currentZionRef","currentBryceCanyonRef","observe","unobserve","_jsxs","concat","id","ref","children","_jsx"],"sourceRoot":""}